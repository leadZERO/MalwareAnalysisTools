import re
from os import listdir, mkdir
from shutil import rmtree
from os.path import isfile, join, expanduser
import binascii
import sys
import requests

baseDlDir = expanduser('~/tempdl')


def findAllEncodedUrls(path):
	af = ""
	with open(path, "rb") as f:
		af = f.read()

	allUrls = list()

	for m in re.finditer(br'(?P<enc>6800740074007000([0-9a-fA-F][0-9a-fA-F]00)+?)(00|20)00', af):
		allUrls.append(binascii.unhexlify(m['enc'].replace(b'00', b'')).decode('ascii'))

	return allUrls


visitedUrls = dict()
visitedUrlsInd = 0


def processFile(path):
	global visitedUrlsInd, visitedUrls

	print('Processing file {}'.format(path))
	results = dict({'path': path})

	results['rtfUrls'] = findAllEncodedUrls(path)

	for u in results['rtfUrls']:
		print('... {}'.format(u), end='')

		if u not in visitedUrls.values():
			visitedUrls[visitedUrlsInd] = u
			visitedUrlsInd = visitedUrlsInd+1
			print(': NEW')
		else:
			print(': DUP')

	return results


def cleanDlPath(path):
	rmtree(path)
	mkdir(path)


def downloadUrls(urls, basePath):
	dlContent = list()

	for i in urls:
		res = dict({'ind': i, 'url': urls[i]})

		print('Downloading url {}'.format(res['url']))
		resp = requests.get(res['url'])

		if resp.ok:
			print(': {}'.format(resp.status_code))
			p = join(basePath, res['ind'])
			with open(p, 'rb') as f:
				f.write(resp.content)


def processDir(path):
	print('Processing path {}'.format(path))
	results = list()
	for f in [f for f in listdir(path) if isfile(join(path, f))]:
		results.append(processFile(join(path, f)))

	return results


def main():
	results = list()
	for a in sys.argv:
		if isfile(a):
			results.append(processFile(a))
		else:
			r2 = processDir(a)

			if r2:
				results = results + r2

	print(results)
	cleanDlPath()
	downloadUrls(visitedUrls, baseDlDir)


if __name__ == "__main__":
	main()
